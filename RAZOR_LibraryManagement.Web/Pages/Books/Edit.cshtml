@page "{id:int}"
@model RAZOR_LibraryManagement.Web.Pages.Books.EditModel
@using RAZOR_LibraryManagement.Lang.Book
@{
    ViewData["Title"] = "Edit book";
    var disabled = "Disabled if book is borrowed";
}

<div class="container mx-auto">
    <div class="row justify-content-center">
        <fieldset class="clo-12 col-lg-6">
            <div class="text-center">
                <h1 class="display-4">@BookEdit.tEdit</h1>
                <partial name="_Notification" />
            </div>
            <form method="post">
                <div hidden><input type="text" class="form-control" asp-for="vmBookEdit.BookId" /></div>
                <div class="mb-3">
                    <label class="form-label">@BookEdit.Title</label>
                    <input type="text" class="form-control" asp-for="vmBookEdit.Title" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">@BookEdit.Author</label>
                    <input type="text" class="form-control" asp-for="vmBookEdit.Author" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">@BookEdit.Description</label>
                    <input type="text" class="form-control" asp-for="vmBookEdit.Description" required />
                </div>

                <div class="mb-3">
                    <label class="form-label">@BookEdit.Image</label>
                    <input type="file" asp-for="FeaturedImage" id="featuredImageId" />
                </div>
                <div class="mb-3">
                    <label class="form-label">@BookEdit.ImageUrl</label>
                    <input type="text" class="form-control" asp-for="vmBookEdit.ImageUrl" id="imageUrlCloudinary" required />
                </div>
                <fieldset class="row mb-3">
                    <legend class="col-form-label">
                        @BookEdit.sCategory
                    </legend>
                    @foreach (var cat in Model.vmCategoryIndexList)
                    {
                        @if (cat.CategoryId == Model.vmBookEdit.CategoryId)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="radio" asp-for="vmBookEdit.CategoryId" checked value="@cat.CategoryId" name="radioCategory" id="@cat.Name" required>
                                <label class="form-check-label" for="@cat.Name">
                                    @cat.Name
                                </label>
                            </div>
                        }
                        else
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="radio" asp-for="vmBookEdit.CategoryId" value="@cat.CategoryId" name="radioCategory" id="@cat.Name" required>
                                <label class="form-check-label" for="@cat.Name">
                                    @cat.Name
                                </label>
                            </div>
                        }
                    }
                </fieldset>
                <div class="mb-3">
                    <label class="form-check-label" for="flexRadioDefault">
                        @BookEdit.pBorrow
                    </label>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="vmBookEdit.IsBorrowable" disabled="@Model.isBorrowed" />
                        <label class="form-check-label" for="flexCheckDefault" data-bs-toggle="tooltip" data-bs-title="@disabled">
                            @BookEdit.Yes
                        </label>
                    </div>
                </div>
                <div class="mb-3">
                    <button type="submit" class="btn btn-success">@BookEdit.btnEdit</button>
                    <a class="btn btn-info" href="/books/list">@BookEdit.btnCancel</a>
                </div>
            </form>
        </fieldset>
    </div>
</div>

@section Scripts{
    <script>
        //Upload image to cloud
        const featuredImageElement = document.getElementById('featuredImageId');
        const imageUrlCloudinaryElement = document.getElementById('imageUrlCloudinary')


        async function uploadFeaturedImage(e) {
            let data = new FormData();
            data.append('file', e.target.files[0]);

            await fetch('/api/image', {
                method: 'POST',
                headers: {
                    'Accept': '*/*',
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    imageUrlCloudinaryElement.value = result.link;

                });
        }

        featuredImageElement.addEventListener('change', uploadFeaturedImage);

        //ToolTip trigger
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

    </script>
}